import cv2
import torch
import threading
import numpy as np
import pytesseract
from ultralytics import YOLO

# ğŸ“Œ OpenCV Optimizasyonu AÃ§
cv2.setUseOptimized(True)
cv2.setNumThreads(12)  # Ryzen 5 4600H iÃ§in 12 mantÄ±ksal iÅŸlem birimini kullan

# ğŸ“Œ YOLOv8 Modelini CPU'da Optimize Et
model = YOLO("yolov8n.pt").to("cpu")  # En kÃ¼Ã§Ã¼k model (Nano) kullan
model.fuse()  # Model optimizasyonu

# ğŸ“Œ OCR iÃ§in Tesseract Kurulumu (EÄŸer henÃ¼z kurulmadÄ±ysa yÃ¼kle)
pytesseract.pytesseract.tesseract_cmd = r"C:\Program Files\Tesseract-OCR\tesseract.exe"

# ğŸ“Œ Kamera AÃ§ ve Ã‡Ã¶zÃ¼nÃ¼rlÃ¼ÄŸÃ¼ KÃ¼Ã§Ã¼k Tut (HÄ±z Ä°Ã§in)
cap = cv2.VideoCapture(0)
cap.set(3, 320)  # GeniÅŸlik (FPS'yi artÄ±rmak iÃ§in dÃ¼ÅŸÃ¼k tut)
cap.set(4, 240)  # YÃ¼kseklik

# ğŸ“Œ Frame Ä°ÅŸleme Fonksiyonu (Ã‡oklu Ä°ÅŸ ParÃ§acÄ±ÄŸÄ± Ä°Ã§in)
def process_frame():
    while True:
        ret, frame = cap.read()
        if not ret:
            break

        # ğŸ”¹ GÃ¶rÃ¼ntÃ¼ Boyutunu KÃ¼Ã§Ã¼lt (Daha HÄ±zlÄ± Ä°ÅŸleme Ä°Ã§in)
        frame = cv2.resize(frame, (320, 240))

        # ğŸ”¹ YOLO ile Nesne AlgÄ±lama (FP16 KAPALI, CPU Ä°Ã‡Ä°N GEREKSÄ°Z)
        results = model(frame)  

        # ğŸ”¹ AlgÄ±lanan Nesneleri Ã‡iz
        for result in results:
            for box in result.boxes:
                x1, y1, x2, y2 = map(int, box.xyxy[0])  # Nesne KoordinatlarÄ±
                label = result.names[int(box.cls)]  # Nesne AdÄ±
                conf = box.conf.item()  # GÃ¼ven Skoru

                # ğŸ”¹ Nesne Ã‡izimi
                cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
                cv2.putText(frame, f"{label} {conf:.2f}", (x1, y1 - 10),
                            cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

                # ğŸ”¹ OCR iÃ§in Sadece Metin Olabilecek Nesnelerde Ä°ÅŸleme Yap
                if "text" in label.lower():  # Metin iÃ§eren nesneler iÃ§in OCR
                    roi = frame[y1:y2, x1:x2]  
                    gray = cv2.cvtColor(roi, cv2.COLOR_BGR2GRAY)  # Siyah-Beyaz DÃ¶nÃ¼ÅŸtÃ¼rme
                    
                    # OCR ile Metin Okuma
                    text = pytesseract.image_to_string(gray, lang="eng+tur").strip()
                    if text:
                        cv2.putText(frame, text, (x1, y2 + 20),
                                    cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 255), 2)

        # ğŸ”¹ GÃ¶rÃ¼ntÃ¼yÃ¼ GÃ¶ster
        cv2.imshow("Nesne ve Metin AlgÄ±lama (CPU Optimize)", frame)

        # Ã‡Ä±kÄ±ÅŸ iÃ§in 'q' tuÅŸuna bas
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

# ğŸ“Œ Thread BaÅŸlat (Daha HÄ±zlÄ± Ä°ÅŸleme Ä°Ã§in)
thread = threading.Thread(target=process_frame)
thread.start()

# ğŸ“Œ Thread'in Bitmesini Bekle
thread.join()

# ğŸ“Œ KaynaklarÄ± Serbest BÄ±rak
cap.release()
cv2.destroyAllWindows()
